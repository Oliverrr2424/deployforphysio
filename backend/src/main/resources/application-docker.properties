# Docker Profile Configuration for Render Deployment

# Database Configuration - Uses environment variables
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/postgres}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Disable SQL initialization (use migrations instead)
spring.sql.init.mode=never

# Logging Configuration
logging.level.com.appyo.physioapp=INFO
logging.level.org.hibernate.SQL=WARN

# JWT Configuration
jwt.secret=${JWT_SECRET:super-secret-jwt-token-with-at-least-32-characters-long-for-physioapp-backend-auth}

# API Keys (from environment variables)
deepseek.api.key=${DEEPSEEK_API_KEY:}
deepseek.api.url=${DEEPSEEK_API_URL:https://api.deepseek.com}
gemini.api.key=${GEMINI_API_KEY:}

# Server Configuration
server.port=${PORT:8080}
server.address=0.0.0.0

# CORS Configuration
spring.web.cors.allowed-origins=${SPRING_WEB_CORS_ALLOWED_ORIGINS:http://localhost:3000}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=* 