-- Complete schema for new Supabase database
-- This includes all tables from the existing schema plus the new temp data tables

-- Set up the database
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE SCHEMA IF NOT EXISTS "public";
ALTER SCHEMA "public" OWNER TO "pg_database_owner";
COMMENT ON SCHEMA "public" IS 'standard public schema';

SET default_tablespace = '';
SET default_table_access_method = "heap";

-- Core User table (using lowercase 'user' to match backend expectations)
CREATE TABLE IF NOT EXISTS "public"."user" (
    "user_id" uuid DEFAULT gen_random_uuid() NOT NULL,
    "username" character varying NOT NULL,
    "email" character varying NOT NULL,
    "password_hash" bytea NOT NULL,
    "created_at" timestamp with time zone DEFAULT now(),
    "last_login" timestamp with time zone,
    "gender" character varying,
    "age" bigint,
    "fitness_goal" text,
    "equipment_access" text,
    CONSTRAINT "user_pkey" PRIMARY KEY ("user_id"),
    CONSTRAINT "user_username_key" UNIQUE ("username"),
    CONSTRAINT "user_email_key" UNIQUE ("email")
);

-- Exercise table
CREATE TABLE IF NOT EXISTS "public"."Exercise" (
    "exercise_id" uuid DEFAULT gen_random_uuid() NOT NULL,
    "name" character varying NOT NULL,
    "description" text,
    "target_muscles" text,
    "secondary_muscles" text,
    "equipment_required" text,
    "difficulty_level" character varying,
    "image_url" text,
    "video_url" text,
    CONSTRAINT "Exercise_pkey" PRIMARY KEY ("exercise_id"),
    CONSTRAINT "Exercise_name_key" UNIQUE ("name")
);

-- Workout plan table
CREATE TABLE IF NOT EXISTS "public"."workout_plan" (
    "plan_id" uuid DEFAULT gen_random_uuid() NOT NULL,
    "user_id" uuid NOT NULL,
    "plan_name" character varying,
    "duration_minutes" bigint,
    "generated_at" timestamp with time zone DEFAULT now(),
    "is_completed" boolean DEFAULT false,
    "feedback_rating" bigint,
    "notes" text,
    "injury_focus" text,
    "equipment_used" text,
    CONSTRAINT "workout_plan_pkey" PRIMARY KEY ("plan_id")
);

-- Plan exercise table
CREATE TABLE IF NOT EXISTS "public"."plan_exercise" (
    "plan_exercise_id" uuid DEFAULT gen_random_uuid() NOT NULL,
    "plan_id" uuid NOT NULL,
    "exercise_id" uuid,
    "exercise_order" bigint,
    "sets" bigint,
    "reps" bigint,
    "duration_seconds" bigint,
    "form_tips" text,
    "common_errors" text,
    CONSTRAINT "plan_exercise_pkey" PRIMARY KEY ("plan_exercise_id")
);

-- Workout log table
CREATE TABLE IF NOT EXISTS "public"."workout_log" (
    "log_id" uuid DEFAULT gen_random_uuid() NOT NULL,
    "user_id" uuid NOT NULL,
    "plan_id" uuid,
    "workout_date" timestamp with time zone DEFAULT now(),
    "start_time" timestamp with time zone,
    "end_time" timestamp with time zone,
    "duration_minutes" bigint,
    "targeted_areas" text,
    "notes" text,
    CONSTRAINT "workout_log_pkey" PRIMARY KEY ("log_id")
);

-- Injury table
CREATE TABLE IF NOT EXISTS "public"."injury" (
    "injury_id" bigint GENERATED BY DEFAULT AS IDENTITY,
    "user_id" uuid NOT NULL,
    "injury_type" character varying,
    "injury_area" character varying,
    "severity" character varying,
    "start_date" timestamp without time zone,
    "recovery_status" character varying,
    "muscle_groups_to_avoid" text,
    "goals_for_injury" text,
    "notes" text,
    "updated_at" timestamp with time zone DEFAULT now(),
    CONSTRAINT "injury_pkey" PRIMARY KEY ("injury_id")
);

-- Chatbot interaction table
CREATE TABLE IF NOT EXISTS "public"."chatbot_interaction" (
    "interaction_id" bigint GENERATED BY DEFAULT AS IDENTITY,
    "user_id" uuid NOT NULL,
    "timestamp" timestamp with time zone DEFAULT now(),
    "user_message" text,
    "ai_response" text,
    "related_exercise_id" uuid,
    CONSTRAINT "chatbot_interaction_pkey" PRIMARY KEY ("interaction_id")
);

-- User preferences table (for temporary user preferences)
CREATE TABLE IF NOT EXISTS "public"."user_preferences" (
    "preference_id" uuid DEFAULT gen_random_uuid() NOT NULL,
    "user_id" uuid NOT NULL,
    "fitness_level" character varying,
    "workout_duration" integer,
    "equipment_access" text,
    "injury_considerations" text,
    "fitness_goals" text,
    "created_at" timestamp without time zone DEFAULT now(),
    "expires_at" timestamp without time zone DEFAULT (now() + interval '7 days'),
    "is_active" boolean DEFAULT true,
    CONSTRAINT "user_preferences_pkey" PRIMARY KEY ("preference_id")
);

-- Generated plans table (for temporary AI-generated plans)
CREATE TABLE IF NOT EXISTS "public"."generated_plans" (
    "plan_id" uuid DEFAULT gen_random_uuid() NOT NULL,
    "user_id" uuid NOT NULL,
    "plan_data" text,
    "created_at" timestamp without time zone DEFAULT now(),
    "expires_at" timestamp without time zone DEFAULT (now() + interval '1 day'),
    "is_active" boolean DEFAULT true,
    "is_used" boolean DEFAULT false,
    CONSTRAINT "generated_plans_pkey" PRIMARY KEY ("plan_id")
);

-- Add foreign key constraints
ALTER TABLE "public"."workout_plan" 
ADD CONSTRAINT "workout_plan_user_id_fkey" 
FOREIGN KEY ("user_id") REFERENCES "public"."user"("user_id") ON DELETE CASCADE;

ALTER TABLE "public"."plan_exercise" 
ADD CONSTRAINT "plan_exercise_plan_id_fkey" 
FOREIGN KEY ("plan_id") REFERENCES "public"."workout_plan"("plan_id") ON DELETE CASCADE;

ALTER TABLE "public"."plan_exercise" 
ADD CONSTRAINT "plan_exercise_exercise_id_fkey" 
FOREIGN KEY ("exercise_id") REFERENCES "public"."Exercise"("exercise_id") ON DELETE SET NULL;

ALTER TABLE "public"."workout_log" 
ADD CONSTRAINT "workout_log_user_id_fkey" 
FOREIGN KEY ("user_id") REFERENCES "public"."user"("user_id") ON DELETE CASCADE;

ALTER TABLE "public"."workout_log" 
ADD CONSTRAINT "workout_log_plan_id_fkey" 
FOREIGN KEY ("plan_id") REFERENCES "public"."workout_plan"("plan_id") ON DELETE SET NULL;

ALTER TABLE "public"."injury" 
ADD CONSTRAINT "injury_user_id_fkey" 
FOREIGN KEY ("user_id") REFERENCES "public"."user"("user_id") ON DELETE CASCADE;

ALTER TABLE "public"."chatbot_interaction" 
ADD CONSTRAINT "chatbot_interaction_user_id_fkey" 
FOREIGN KEY ("user_id") REFERENCES "public"."user"("user_id") ON DELETE CASCADE;

ALTER TABLE "public"."chatbot_interaction" 
ADD CONSTRAINT "chatbot_interaction_exercise_id_fkey" 
FOREIGN KEY ("related_exercise_id") REFERENCES "public"."Exercise"("exercise_id") ON DELETE SET NULL;

ALTER TABLE "public"."user_preferences" 
ADD CONSTRAINT "user_preferences_user_id_fkey" 
FOREIGN KEY ("user_id") REFERENCES "public"."user"("user_id") ON DELETE CASCADE;

ALTER TABLE "public"."generated_plans" 
ADD CONSTRAINT "generated_plans_user_id_fkey" 
FOREIGN KEY ("user_id") REFERENCES "public"."user"("user_id") ON DELETE CASCADE;

-- Add indexes for better performance
CREATE INDEX IF NOT EXISTS "idx_workout_plan_user_id" ON "public"."workout_plan"("user_id");
CREATE INDEX IF NOT EXISTS "idx_plan_exercise_plan_id" ON "public"."plan_exercise"("plan_id");
CREATE INDEX IF NOT EXISTS "idx_workout_log_user_id" ON "public"."workout_log"("user_id");
CREATE INDEX IF NOT EXISTS "idx_injury_user_id" ON "public"."injury"("user_id");
CREATE INDEX IF NOT EXISTS "idx_chatbot_interaction_user_id" ON "public"."chatbot_interaction"("user_id");
CREATE INDEX IF NOT EXISTS "idx_user_preferences_user_id" ON "public"."user_preferences"("user_id");
CREATE INDEX IF NOT EXISTS "idx_user_preferences_active" ON "public"."user_preferences"("is_active", "expires_at");
CREATE INDEX IF NOT EXISTS "idx_generated_plans_user_id" ON "public"."generated_plans"("user_id");
CREATE INDEX IF NOT EXISTS "idx_generated_plans_active" ON "public"."generated_plans"("is_active", "expires_at");

-- Set ownership
ALTER TABLE "public"."user" OWNER TO "postgres";
ALTER TABLE "public"."Exercise" OWNER TO "postgres";
ALTER TABLE "public"."workout_plan" OWNER TO "postgres";
ALTER TABLE "public"."plan_exercise" OWNER TO "postgres";
ALTER TABLE "public"."workout_log" OWNER TO "postgres";
ALTER TABLE "public"."injury" OWNER TO "postgres";
ALTER TABLE "public"."chatbot_interaction" OWNER TO "postgres";
ALTER TABLE "public"."user_preferences" OWNER TO "postgres";
ALTER TABLE "public"."generated_plans" OWNER TO "postgres";

-- Insert some basic test data
INSERT INTO "public"."Exercise" ("name", "description", "target_muscles", "equipment_required", "difficulty_level") VALUES
('Push-ups', 'Basic bodyweight exercise targeting chest, shoulders, and triceps', 'Chest, Shoulders, Triceps', 'None', 'Beginner'),
('Squats', 'Lower body exercise targeting quads, glutes, and hamstrings', 'Quadriceps, Glutes, Hamstrings', 'None', 'Beginner'),
('Plank', 'Core stability exercise', 'Core, Shoulders', 'None', 'Beginner')
ON CONFLICT ("name") DO NOTHING; 