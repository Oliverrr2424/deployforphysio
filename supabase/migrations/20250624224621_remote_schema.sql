

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."Exercise" (
    "exercise_id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "name" character varying NOT NULL,
    "description" "text",
    "target_muscles" "text",
    "secondary_muscles" "text",
    "equipment_required" "text",
    "difficulty_level" character varying,
    "image_url" "text",
    "video_url" "text"
);


ALTER TABLE "public"."Exercise" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."User" (
    "user_id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "username" character varying NOT NULL,
    "email" character varying,
    "password_hash" "bytea",
    "created_at" timestamp with time zone,
    "last_login" timestamp with time zone,
    "gender" character varying,
    "age" bigint,
    "fitness_goal" "text",
    "equipment_access" "text"
);


ALTER TABLE "public"."User" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."chatbot_interaction" (
    "interaction_id" bigint NOT NULL,
    "user_id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "timestamp" timestamp with time zone,
    "user_message" "text",
    "ai_response" "text",
    "related_exercise_id" "uuid" DEFAULT "gen_random_uuid"()
);


ALTER TABLE "public"."chatbot_interaction" OWNER TO "postgres";


ALTER TABLE "public"."chatbot_interaction" ALTER COLUMN "interaction_id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."chatbot_interaction_interaction_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."injury" (
    "injury_id" bigint NOT NULL,
    "user_id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "injury_type" character varying,
    "injury_area" character varying,
    "severity" character varying,
    "start_date" timestamp without time zone,
    "recovery_status" character varying,
    "muscle_groups_to_avoid" "text",
    "goals_for_injury" "text",
    "notes" "text",
    "updated_at" timestamp with time zone
);


ALTER TABLE "public"."injury" OWNER TO "postgres";


ALTER TABLE "public"."injury" ALTER COLUMN "injury_id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."injury_injury_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."plan_exercise" (
    "plan_exercise_id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "plan_id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "exercise_id" "uuid" DEFAULT "gen_random_uuid"(),
    "exercise_order" bigint,
    "sets" bigint,
    "reps" bigint,
    "duration_seconds" bigint,
    "form_tips" "text",
    "common_errors" "text"
);


ALTER TABLE "public"."plan_exercise" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."workout_log" (
    "log_id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "user_id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "plan_id" "uuid" DEFAULT "gen_random_uuid"(),
    "workout_date" timestamp with time zone,
    "start_time" timestamp with time zone,
    "end_time" timestamp with time zone,
    "duration_minutes" bigint,
    "targeted_areas" "text",
    "notes" "text"
);


ALTER TABLE "public"."workout_log" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."workout_plan" (
    "plan_id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "user_id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "plan_name" character varying,
    "duration_minutes" bigint,
    "generated_at" timestamp with time zone,
    "is_completed" boolean,
    "feedback_rating" bigint,
    "notes" "text",
    "injury_focus" "text",
    "equipment_used" "text"
);


ALTER TABLE "public"."workout_plan" OWNER TO "postgres";


ALTER TABLE ONLY "public"."Exercise"
    ADD CONSTRAINT "Exercise_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."Exercise"
    ADD CONSTRAINT "Exercise_pkey" PRIMARY KEY ("exercise_id");



ALTER TABLE ONLY "public"."User"
    ADD CONSTRAINT "User_email_key" UNIQUE ("email");



ALTER TABLE ONLY "public"."User"
    ADD CONSTRAINT "User_pkey" PRIMARY KEY ("user_id");



ALTER TABLE ONLY "public"."User"
    ADD CONSTRAINT "User_username_key" UNIQUE ("username");



ALTER TABLE ONLY "public"."chatbot_interaction"
    ADD CONSTRAINT "chatbot_interaction_pkey" PRIMARY KEY ("interaction_id");



ALTER TABLE ONLY "public"."injury"
    ADD CONSTRAINT "injury_pkey" PRIMARY KEY ("injury_id");



ALTER TABLE ONLY "public"."plan_exercise"
    ADD CONSTRAINT "plan_exercise_pkey" PRIMARY KEY ("plan_exercise_id");



ALTER TABLE ONLY "public"."plan_exercise"
    ADD CONSTRAINT "plan_exercise_plan_id_key" UNIQUE ("plan_id");



ALTER TABLE ONLY "public"."workout_log"
    ADD CONSTRAINT "workout_log_pkey" PRIMARY KEY ("log_id");



ALTER TABLE ONLY "public"."workout_plan"
    ADD CONSTRAINT "workout_plan_pkey" PRIMARY KEY ("plan_id");



ALTER TABLE ONLY "public"."chatbot_interaction"
    ADD CONSTRAINT "chatbot_interaction_related_exercise_id_fkey" FOREIGN KEY ("related_exercise_id") REFERENCES "public"."Exercise"("exercise_id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."chatbot_interaction"
    ADD CONSTRAINT "chatbot_interaction_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."User"("user_id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."injury"
    ADD CONSTRAINT "injury_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."User"("user_id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."plan_exercise"
    ADD CONSTRAINT "plan_exercise_exercise_id_fkey" FOREIGN KEY ("exercise_id") REFERENCES "public"."Exercise"("exercise_id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."plan_exercise"
    ADD CONSTRAINT "plan_exercise_plan_id_fkey" FOREIGN KEY ("plan_id") REFERENCES "public"."workout_plan"("plan_id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."workout_log"
    ADD CONSTRAINT "workout_log_plan_id_fkey" FOREIGN KEY ("plan_id") REFERENCES "public"."workout_plan"("plan_id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."workout_log"
    ADD CONSTRAINT "workout_log_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."User"("user_id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."workout_plan"
    ADD CONSTRAINT "workout_plan_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."User"("user_id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE "public"."Exercise" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."User" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."chatbot_interaction" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."injury" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."plan_exercise" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."workout_log" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."workout_plan" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";








































































































































































GRANT ALL ON TABLE "public"."Exercise" TO "anon";
GRANT ALL ON TABLE "public"."Exercise" TO "authenticated";
GRANT ALL ON TABLE "public"."Exercise" TO "service_role";



GRANT ALL ON TABLE "public"."User" TO "anon";
GRANT ALL ON TABLE "public"."User" TO "authenticated";
GRANT ALL ON TABLE "public"."User" TO "service_role";



GRANT ALL ON TABLE "public"."chatbot_interaction" TO "anon";
GRANT ALL ON TABLE "public"."chatbot_interaction" TO "authenticated";
GRANT ALL ON TABLE "public"."chatbot_interaction" TO "service_role";



GRANT ALL ON SEQUENCE "public"."chatbot_interaction_interaction_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."chatbot_interaction_interaction_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."chatbot_interaction_interaction_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."injury" TO "anon";
GRANT ALL ON TABLE "public"."injury" TO "authenticated";
GRANT ALL ON TABLE "public"."injury" TO "service_role";



GRANT ALL ON SEQUENCE "public"."injury_injury_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."injury_injury_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."injury_injury_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."plan_exercise" TO "anon";
GRANT ALL ON TABLE "public"."plan_exercise" TO "authenticated";
GRANT ALL ON TABLE "public"."plan_exercise" TO "service_role";



GRANT ALL ON TABLE "public"."workout_log" TO "anon";
GRANT ALL ON TABLE "public"."workout_log" TO "authenticated";
GRANT ALL ON TABLE "public"."workout_log" TO "service_role";



GRANT ALL ON TABLE "public"."workout_plan" TO "anon";
GRANT ALL ON TABLE "public"."workout_plan" TO "authenticated";
GRANT ALL ON TABLE "public"."workout_plan" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
